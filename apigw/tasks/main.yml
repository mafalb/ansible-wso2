---

- debug: var=wso2
  tags:
    - debug
    - never

- debug: var=wso2
  tags:
    - debug
    - never

- name: install API Gateway
  package:
    name: wso2am-{{ wso2.version }}
    state: present

- name: create user {{ wso2.user }}
  user:
    name: "{{ wso2.user }}"
    home: "{{ wso2.dir }}"

- name: Change the owner of WSO2 directory
  file:
     path: "{{ wso2.dir }}/{{ wso2.version }}"
     state: directory
     recurse: true
     owner: "{{ wso2.user }}"
     group: "{{ wso2.user }}"
     mode: 0750

- debug: var=wso2.external_keystore
  tags:
    - debug
    - never

- name: copy keystore
  copy:
    src: "{{ playbook_dir }}/{{ wso2.external_keystore_file }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/resources/security/wso2carbon.jks"
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
    backup: true
  notify: restart apigw

- name: copy truststore
  copy:
    src: "{{ playbook_dir }}/{{ wso2.external_truststore_file }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/resources/security/client-truststore.jks"
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
    backup: true
  notify: restart apigw
  
- name: user-mgt.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/conf/user-mgt.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - "{{ wso2.version }}/user-mgt.xml.j2"
  notify:
    - restart apigw

- name: catalina-server.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/conf/tomcat/catalina-server.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - "{{ wso2.version }}/catalina-server.xml.j2"
  notify:
    - restart apigw
  tags:
    - cfg

- name: axis2.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/conf/axis2/axis2.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - "{{ wso2.version }}/axis2.xml.j2"
  notify:
    - restart apigw
  tags:
    - cfg

- name: api-manager.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/conf/api-manager.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - "{{ wso2.version }}/api-manager.xml.j2"
  notify:
    - restart apigw
  tags:
    - cfg

- name: carbon.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/conf/carbon.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - "{{ wso2.version }}/carbon.xml.j2"
  notify:
    - restart apigw
  tags:
    - cfg

- name: create directories
  file:
    path: "{{ wso2.dir }}/{{ wso2.version }}/repository/deployment/server"
    recurse: true
    state: directory
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"

- debug: msg="{ wso2.dir }}/{{ wso2.version }}/repository/deployment/server/senderprofiles.xml"
  tags:
    - debug
    - never

- name: senderprofiles.xml
  template:
    src: "{{ wso2.version }}/senderprofiles.xml.j2"
    dest: "{{ wso2.dir }}/{{ wso2.version }}/repository/deployment/server/senderprofiles.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  notify:
    - restart apigw
  tags:
    - cfg

- name: systemd unit
  template:
    src: wso2apigw.service.j2
    dest: /etc/systemd/system/wso2am-{{ wso2.version }}.service
    backup: yes
  register: _wso2_am_systemdunit
  
- name: systemd unit
  when: wso2.enabled
  template:
    src: wso2apigw.service.j2
    dest: /etc/systemd/system/wso2am.service
    backup: yes
  register: _wso2_am_systemdunit2

- name: systemd daemon-reload
  when: _wso2_am_systemdunit.changed or _wso2_am_systemdunit2.changed
  systemd:
    daemon-reload: true

- name: apigw is running
  service:
    name: wso2am-{{ wso2.version }}.service
    state: "{{ wso2.state|default('started') }}"
    enabled: "{{ wso2.enabled|default(true) }}"
  tags:
    - cfg

- name: symlink to logfiles
  when: wso2.enabled|default(true)
  tags:
    - install
  file:
    src: "{{ wso2.dir }}/{{ wso2.version }}/repository/logs"
    dest: /var/log/wso2am-{{ wso2.version }}
    state: link

- name: firewall
  tags:
    - install
  firewalld:
    port: "{{ item }}"
    immediate: yes
    permanent: yes
    state: enabled
  with_items:
    - 9443/tcp
    - 8280/tcp
    - 8243/tcp

