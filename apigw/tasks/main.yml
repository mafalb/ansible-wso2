---

- debug: var=wso2
  tags:
    - debug
    - never

- stat:
    path: "{{ wso2.dir }}/wso2am-{{ wso2.version }}"
  register: __wso_is_installed
  changed_when: no
  tags:
    - always

- debug: var=__wso_is_installed
  tags:
    - debug
    - never

- debug: var=wso2
  tags:
    - debug
    - never

- name: install API Gateway
  unarchive:
    creates: "{{ wso2.dir }}/wso2am-{{ wso2.version }}"
    src: files/wso2am-{{ wso2.version }}.zip
    dest: "{{ wso2.dir }}"
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  tags:
    - install

- debug: var=wso2.external_keystore
  tags:
    - debug
    - never

- name: copy keystore
  copy:
    src: "{{ playbook_dir }}/{{ wso2.external_keystore_file }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/resources/security/wso2carbon.jks"
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
    backup: true
  notify: restart apigw

- name: copy truststore
  copy:
    src: "{{ playbook_dir }}/{{ wso2.external_truststore_file }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/resources/security/client-truststore.jks"
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
    backup: true
  notify: restart apigw
  
- name: user-mgt.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/conf/user-mgt.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - user-mgt.xml.j2
  notify:
    - restart apigw

- name: catalina-server.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/conf/tomcat/catalina-server.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - catalina-server.xml.j2
  notify:
    - restart apigw
  tags:
    - cfg

- name: axis2.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/conf/axis2/axis2.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - axis2.xml.j2
  notify:
    - restart apigw
  tags:
    - cfg

- name: api-manager.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/conf/api-manager.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - api-manager.xml.j2
  notify:
    - restart apigw
  tags:
    - cfg

- name: carbon.xml
  template:
    src: "{{ item }}"
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/conf/carbon.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  with_first_found:
    - carbon.xml.j2
  notify:
    - restart apigw
  tags:
    - cfg

- name: create directories
  file:
    path: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/deployment/server"
    recurse: true
    state: directory
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"

- debug: msg="{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/deployment/server/senderprofiles.xml"
  tags:
    - debug
    - never

- name: senderprofiles.xml
  template:
    src: senderprofiles.xml.j2
    dest: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/deployment/server/senderprofiles.xml"
    backup: yes
    owner: "{{ wso2.user }}"
    group: "{{ wso2.user }}"
  notify:
    - restart apigw
  tags:
    - cfg

- name: systemd unit
  template:
    src: wso2apigw.service.j2
    dest: /etc/systemd/system/wso2apigw.service
    backup: yes
  tags:
    - install

- name: apigw is running
  service:
    name: wso2apigw
    state: started
    enabled: yes
  tags:
    - cfg

- name: symlink to logfiles
  tags:
    - install
  file:
    src: "{{ wso2.dir }}/wso2am-{{ wso2.version }}/repository/logs"
    dest: /var/log/wso2apigw
    state: link

- name: firewall
  tags:
    - install
  firewalld:
    port: "{{ item }}"
    immediate: yes
    permanent: yes
    state: enabled
  with_items:
    - 9443/tcp
    - 8280/tcp
    - 8243/tcp

